{"version":3,"sources":["hooks/Api.jsx","components/Search.jsx","App.js","index.js"],"names":["api","axios","create","baseURL","headers","getReciters","get","then","response","data","reciters","catch","error","getSowar","reciter","Suras_Name","Search","useState","setReciters","currentReciter","setCurrentReciter","souras","setSouras","currentSoura","setCurrentSoura","requestError","setRequestError","useEffect","a","console","log","errors","fetchReciters","fetchSowar","className","name","classNamePrefix","isClearable","isRtl","isSearchable","options","map","s","label","value","id","onChange","e","target","JSON","parse","suras","split","stringify","server","Server","rewaya","count","letter","soura","souraFile","padStart","url","souraName","find","src","controls","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.82afebef.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://mp3quran.net/api/\",\n  headers: { \"Content-Type\": \"application/json\" }\n});\n\nexport const getReciters = () => {\n  return api\n    .get(\"/_arabic.json\")\n    .then((response) => {\n      return response.data.reciters;\n    })\n    .catch((error) => {\n      return error;\n    });\n};\n\nexport const getSowar = (reciter) => {\n  return api\n    .get(\"_arabic_sura.json\")\n    .then((response) => {\n      return response.data.Suras_Name;\n    })\n    .catch((error) => {\n      return error;\n    });\n};\n","import { React, useEffect, useState } from \"react\";\nimport { getReciters, getSowar } from \"../hooks/Api\";\nimport ReactAudioPlayer from \"react-audio-player\";\nimport Select from \"react-select\";\n\nconst Search = () => {\n  const [reciters, setReciters] = useState([]);\n  const [currentReciter, setCurrentReciter] = useState({});\n  const [souras, setSouras] = useState([]);\n  const [currentSoura, setCurrentSoura] = useState();\n  const [requestError, setRequestError] = useState(false);\n\n  useEffect(() => {\n    async function fetchReciters() {\n      console.log(\"fetching Reciters...\");\n      let response = await getReciters();\n      response.errors ? setRequestError(true) : setReciters(response);\n    }\n    fetchReciters();\n  }, []);\n\n  useEffect(() => {\n    async function fetchSowar() {\n      console.log(`fetching Sowar ...`);\n      let response = await getSowar();\n      response.errors ? setRequestError(true) : setSouras(response);\n    }\n    fetchSowar();\n  }, []);\n\n  useEffect(() => {\n    console.log(currentReciter);\n    console.log(currentSoura);\n  }, [currentSoura, currentReciter]);\n\n  return (\n    <div className=\"main-container\">\n      {requestError && <span>requestError</span>}\n\n      <Select\n        name=\"reciters\"\n        className=\"basic-single\"\n        classNamePrefix=\"select\"\n        //defaultValue={colourOptions[0]}\n        //isDisabled={isDisabled}\n        //isLoading={isLoading}\n        isClearable={true}\n        isRtl={true}\n        isSearchable={true}\n        options={reciters.map((s) => ({ label: s.name, value: s.id }))}\n      />\n\n      <Select\n        name=\"suras\"\n        className=\"basic-single\"\n        classNamePrefix=\"select\"\n        //defaultValue={colourOptions[0]}\n        //isDisabled={isDisabled}\n        //isLoading={isLoading}\n        isClearable={true}\n        isRtl={true}\n        isSearchable={true}\n        options={souras.map((s) => ({ label: s.name, value: s.id }))}\n      />\n\n      <select\n        name=\"reciters_list\"\n        onChange={(e) => {\n          console.log(e.target.value);\n          setCurrentReciter({ ...JSON.parse(e.target.value) });\n          setCurrentSoura(JSON.parse(e.target.value).suras.split(\",\"));\n        }}\n      >\n        <option>Select...</option>\n        {reciters.map((reciter) => (\n          <option\n            key={reciter.id}\n            value={JSON.stringify({\n              name: reciter.name,\n              server: reciter.Server,\n              rewaya: reciter.rewaya,\n              count: reciter.count,\n              letter: reciter.letter,\n              suras: reciter.suras\n            })}\n          >\n            {reciter.name}\n          </option>\n        ))}\n      </select>\n      <select name=\"sowars_list\">\n        {souras.map((soura) => (\n          <option id={soura.id} key={soura.id} value={soura.id}>\n            {soura.name}\n          </option>\n        ))}\n      </select>\n      <div className=\"list-container\">\n        {currentSoura &&\n          currentSoura.map((soura) => {\n            let souraFile = soura.padStart(3, \"0\");\n            let url = `${currentReciter.server}/${souraFile}.mp3`;\n            let souraName = souras.find((s) => s.id === soura).name;\n            return (\n              <div key={soura} className=\"player\">\n                <h4>\n                  {souraName} {soura} - {currentReciter.name} -{\" \"}\n                  {currentReciter.rewaya}\n                </h4>\n                <ReactAudioPlayer\n                  src={url}\n                  //autoPlay\n                  controls\n                />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import \"./App.css\";\nimport Search from \"./components/Search\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/*\n        <ReactPlayer url='https://www.youtube.com/watch?v=ysz5S6PUM-U' />\n        https://server11.mp3quran.net/salman/1.mp3\n        \n\n        {[...Array(114)].map((x, i) =>\n          <ObjectRow key={i} />\n        )}\n        */}\n\n        <Search />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}